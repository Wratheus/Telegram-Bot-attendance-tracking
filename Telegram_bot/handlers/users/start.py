from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart

from keyboards.inline.subject_buttons import group
from loader import dp, db
from states.fio import Fio


@dp.message_handler(CommandStart())
async def start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n'
                         f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é")
    await Fio.last_name.set()

@dp.message_handler(state=Fio.last_name)
async def we_got_it(message: types.Message, state: FSMContext):
    answer = message.text
    try:
        user = await db.check_student(student_name=answer)
        if user == "–ë—É—à–º–∞–Ω–æ–≤ –ù–∏–∫–æ–ª–∞–π –í–∞—Å–∏–ª—å–µ–≤–∏—á":
            student_id = await db.get_id(answer)
            await state.finish()
            await message.answer("–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=group)
            #–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è id –ø—Ä–µ–¥–º–µ—Ç–∞
            #–≤–∫–∏–¥—ã–≤–∞–µ–º –≤ —Ç—é–ø–ª

        else:
            await message.answer("üêÄ")
    finally:
        print("Something else went wrong")

